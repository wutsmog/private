---
source: crates/forget_fixtures/tests/fixtures_test.rs
expression: "format!(\"Input:\\n{input}\\n\\nOutput:\\n{output}\")"
input_file: crates/forget_fixtures/tests/fixtures/ssa-reassign-if.js
---
Input:
function Component(a, b) {
  let x;
  let y = 0;
  let z = 10;
  if (a) {
    x = 1;
    if (b) {
      z = 20;
    } else {
      z = 30;
    }
  } else {
    x = 2;
  }
  return x + y + z;
}


Output:
function Component(
  unknown a$26,
  unknown b$27,
)
entry bb0
bb0 (block)
  [0] unknown $3 = DeclareLocal Let unknown x$28
  [1] unknown $4 = 0
  [2] unknown $6 = StoreLocal Let unknown y$29 = unknown $4
  [3] unknown $7 = 10
  [4] unknown $9 = StoreLocal Let unknown z$30 = unknown $7
  [5] unknown $19 = LoadLocal unknown a$26
  [6] If unknown $19 consequent=bb2 alternate=bb6 fallthrough=bb1
bb2 (block)
  predecessors: bb0
  [7] unknown $10 = 1
  [8] unknown $11 = StoreLocal Reassign unknown x$31 = unknown $10
  [9] unknown $16 = LoadLocal unknown b$27
  [10] If unknown $16 consequent=bb4 alternate=bb5 fallthrough=bb3
bb4 (block)
  predecessors: bb2
  [11] unknown $12 = 20
  [12] unknown $13 = StoreLocal Reassign unknown z$32 = unknown $12
  [13] Goto bb3
bb5 (block)
  predecessors: bb2
  [14] unknown $14 = 30
  [15] unknown $15 = StoreLocal Reassign unknown z$33 = unknown $14
  [16] Goto bb3
bb3 (block)
  predecessors: bb4, bb5
  z$40: phi(bb4: z$32, bb5: z$33)
  [17] Goto bb1
bb6 (block)
  predecessors: bb0
  [18] unknown $17 = 2
  [19] unknown $18 = StoreLocal Reassign unknown x$34 = unknown $17
  [20] Goto bb1
bb1 (block)
  predecessors: bb3, bb6
  x$35: phi(bb3: x$31, bb6: x$34)
  z$39: phi(bb3: z$40, bb6: z$30)
  [21] unknown $20 = LoadLocal unknown x$35
  [22] unknown $21 = 0
  [23] unknown $22 = Binary unknown $20 + unknown $21
  [24] unknown $23 = LoadLocal unknown z$39
  [25] unknown $24 = Binary unknown $22 + unknown $23
  [26] Return unknown $24
