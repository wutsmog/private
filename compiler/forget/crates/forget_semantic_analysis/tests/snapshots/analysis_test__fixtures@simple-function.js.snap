---
source: crates/forget_semantic_analysis/tests/analysis_test.rs
expression: "format!(\"Input:\\n{input}\\n\\nAnalysis:\\n{output}\")"
input_file: crates/forget_semantic_analysis/tests/fixtures/simple-function.js
---
Input:
function Component(a) {
  Math;
  let b = 0;
  const foo = function foo_(c) {
    let d = 1;
    return a + b + c + d;
  };
  return foo();
}


Analysis:
Scope {
    id: ScopeId(
        0,
    ),
    kind: Module,
    declarations: {
        "Component": Declaration {
            id: DeclarationId(
                0,
            ),
            kind: FunctionDeclaration,
            scope: ScopeId(
                0,
            ),
        },
    },
    references: [],
    children: [
        Scope {
            id: ScopeId(
                1,
            ),
            kind: Function,
            declarations: {
                "a": Declaration {
                    id: DeclarationId(
                        1,
                    ),
                    kind: FunctionDeclaration,
                    scope: ScopeId(
                        1,
                    ),
                },
                "b": Declaration {
                    id: DeclarationId(
                        2,
                    ),
                    kind: Let,
                    scope: ScopeId(
                        1,
                    ),
                },
                "foo": Declaration {
                    id: DeclarationId(
                        3,
                    ),
                    kind: Const,
                    scope: ScopeId(
                        1,
                    ),
                },
            },
            references: [
                Reference {
                    id: ReferenceId(
                        4,
                    ),
                    kind: Read,
                    declaration: DeclarationId(
                        3,
                    ),
                    declaration (name): "foo",
                    scope: ScopeId(
                        1,
                    ),
                },
            ],
            children: [
                Scope {
                    id: ScopeId(
                        2,
                    ),
                    kind: Function,
                    declarations: {
                        "foo_": Declaration {
                            id: DeclarationId(
                                4,
                            ),
                            kind: FunctionDeclaration,
                            scope: ScopeId(
                                2,
                            ),
                        },
                    },
                    references: [],
                    children: [
                        Scope {
                            id: ScopeId(
                                3,
                            ),
                            kind: Function,
                            declarations: {
                                "c": Declaration {
                                    id: DeclarationId(
                                        5,
                                    ),
                                    kind: FunctionDeclaration,
                                    scope: ScopeId(
                                        3,
                                    ),
                                },
                                "d": Declaration {
                                    id: DeclarationId(
                                        6,
                                    ),
                                    kind: Let,
                                    scope: ScopeId(
                                        3,
                                    ),
                                },
                            },
                            references: [
                                Reference {
                                    id: ReferenceId(
                                        0,
                                    ),
                                    kind: Read,
                                    declaration: DeclarationId(
                                        1,
                                    ),
                                    declaration (name): "a",
                                    scope: ScopeId(
                                        3,
                                    ),
                                },
                                Reference {
                                    id: ReferenceId(
                                        1,
                                    ),
                                    kind: Read,
                                    declaration: DeclarationId(
                                        2,
                                    ),
                                    declaration (name): "b",
                                    scope: ScopeId(
                                        3,
                                    ),
                                },
                                Reference {
                                    id: ReferenceId(
                                        2,
                                    ),
                                    kind: Read,
                                    declaration: DeclarationId(
                                        5,
                                    ),
                                    declaration (name): "c",
                                    scope: ScopeId(
                                        3,
                                    ),
                                },
                                Reference {
                                    id: ReferenceId(
                                        3,
                                    ),
                                    kind: Read,
                                    declaration: DeclarationId(
                                        6,
                                    ),
                                    declaration (name): "d",
                                    scope: ScopeId(
                                        3,
                                    ),
                                },
                            ],
                            children: [],
                        },
                    ],
                },
            ],
        },
    ],
}
Diagnostic(
    DiagnosticData {
        message: "Undefined variable",
        span: Some(
            SourceSpan {
                offset: SourceOffset(
                    26,
                ),
                length: 4,
            },
        ),
        related_information: [],
        severity: InvalidSyntax,
        data: [],
    },
)

