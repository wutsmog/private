---
source: crates/forget_semantic_analysis/tests/analysis_test.rs
expression: "format!(\"Input:\\n{input}\\n\\nAnalysis:\\n{output}\")"
input_file: crates/forget_semantic_analysis/tests/fixtures/var-hoisting.js
---
Input:
function Component(props) {
  bar;
  bar = true;
  baz;
  baz = false;
  function foo() {
    bar;
    bar = true;
    if (props) {
      var bar;
    }
  }
  if (props) {
    // nest inside a block statement to test that the declaration hoists
    var bar;
  }
}

var baz;


Analysis:
Scope {
    id: ScopeId(
        0,
    ),
    kind: Module,
    declarations: {
        "Component": Declaration {
            id: DeclarationId(
                0,
            ),
            kind: FunctionDeclaration,
            scope: ScopeId(
                0,
            ),
        },
        "baz": Declaration {
            id: DeclarationId(
                5,
            ),
            kind: Var,
            scope: ScopeId(
                0,
            ),
        },
    },
    references: [],
    children: [
        Scope {
            id: ScopeId(
                1,
            ),
            kind: Function,
            declarations: {
                "props": Declaration {
                    id: DeclarationId(
                        1,
                    ),
                    kind: FunctionDeclaration,
                    scope: ScopeId(
                        1,
                    ),
                },
                "foo": Declaration {
                    id: DeclarationId(
                        2,
                    ),
                    kind: FunctionDeclaration,
                    scope: ScopeId(
                        1,
                    ),
                },
                "bar": Declaration {
                    id: DeclarationId(
                        4,
                    ),
                    kind: Var,
                    scope: ScopeId(
                        1,
                    ),
                },
            },
            references: [
                Reference {
                    id: ReferenceId(
                        0,
                    ),
                    kind: Read,
                    declaration: DeclarationId(
                        4,
                    ),
                    declaration (name): "bar",
                    scope: ScopeId(
                        1,
                    ),
                },
                Reference {
                    id: ReferenceId(
                        1,
                    ),
                    kind: Write,
                    declaration: DeclarationId(
                        4,
                    ),
                    declaration (name): "bar",
                    scope: ScopeId(
                        1,
                    ),
                },
                Reference {
                    id: ReferenceId(
                        2,
                    ),
                    kind: Read,
                    declaration: DeclarationId(
                        5,
                    ),
                    declaration (name): "baz",
                    scope: ScopeId(
                        1,
                    ),
                },
                Reference {
                    id: ReferenceId(
                        3,
                    ),
                    kind: Write,
                    declaration: DeclarationId(
                        5,
                    ),
                    declaration (name): "baz",
                    scope: ScopeId(
                        1,
                    ),
                },
                Reference {
                    id: ReferenceId(
                        7,
                    ),
                    kind: Read,
                    declaration: DeclarationId(
                        1,
                    ),
                    declaration (name): "props",
                    scope: ScopeId(
                        1,
                    ),
                },
            ],
            children: [
                Scope {
                    id: ScopeId(
                        2,
                    ),
                    kind: Function,
                    declarations: {
                        "bar": Declaration {
                            id: DeclarationId(
                                3,
                            ),
                            kind: Var,
                            scope: ScopeId(
                                2,
                            ),
                        },
                    },
                    references: [
                        Reference {
                            id: ReferenceId(
                                4,
                            ),
                            kind: Read,
                            declaration: DeclarationId(
                                3,
                            ),
                            declaration (name): "bar",
                            scope: ScopeId(
                                2,
                            ),
                        },
                        Reference {
                            id: ReferenceId(
                                5,
                            ),
                            kind: Write,
                            declaration: DeclarationId(
                                3,
                            ),
                            declaration (name): "bar",
                            scope: ScopeId(
                                2,
                            ),
                        },
                        Reference {
                            id: ReferenceId(
                                6,
                            ),
                            kind: Read,
                            declaration: DeclarationId(
                                1,
                            ),
                            declaration (name): "props",
                            scope: ScopeId(
                                2,
                            ),
                        },
                    ],
                    children: [
                        Scope {
                            id: ScopeId(
                                3,
                            ),
                            kind: Block,
                            declarations: {},
                            references: [],
                            children: [],
                        },
                    ],
                },
                Scope {
                    id: ScopeId(
                        4,
                    ),
                    kind: Block,
                    declarations: {},
                    references: [],
                    children: [],
                },
            ],
        },
    ],
}

