---
source: crates/fixtures/tests/fixtures_test.rs
expression: "format!(\"Input:\\n{input}\\n\\nOutput:\\n{output}\")"
input_file: crates/fixtures/tests/fixtures/function-expressions.js
---
Input:
function Component(props) {
  const y = 2;
  const foo = function foo(x) {
    let a = 1;
    let b;
    if (a === 1) {
      b = 5 + 3;
    } else {
      b = false;
    }
    return x + y + b;
  };
}


Output:
function Component(
  unknown props$6,
)
entry bb0
bb0 (block)
  [0] #0 = 2
  [1] #1 = StoreLocal Const unknown y$7 = unknown #0
  [2] #2 = Function @deps[] @context[]:
      function foo(
        unknown x$8,
      )
      entry bb1
      bb1 (block)
        [0] #0 = 1
        [1] #1 = StoreLocal Let unknown a$9 = unknown #0
        [2] #2 = DeclareLocal Let unknown b$10
        [3] #9 = 1
        [4] #10 = 1
        [5] #11 = true
        [6] Goto bb3
      bb3 (block)
        predecessors: bb1
        [7] #3 = 5
        [8] #4 = 3
        [9] #5 = 8
        [10] #6 = StoreLocal Reassign unknown b$11 = unknown #5
        [11] Goto bb2
      bb2 (block)
        predecessors: bb3
        [12] #12 = LoadLocal unknown x$8
        [13] #13 = LoadLocal unknown y$0
        [14] #14 = Binary unknown #12 + unknown #13
        [15] #15 = 8
        [16] #16 = Binary unknown #14 + unknown #15
        [17] Return unknown #16
  [3] #3 = StoreLocal Const unknown foo$16 = unknown #2
  [4] #4 = <undefined>
  [5] Return unknown #4
