---
source: crates/forget_hermes_parser/tests/parser_test.rs
expression: "format!(\"Input:\\n{input}\\n\\nOutput:\\n{output}\")"
input_file: crates/forget_hermes_parser/tests/fixtures/ssa-for-of.js
---
Input:
function foo(cond) {
  let items = [];
  for (const item of items) {
    let y = 0;
    if (cond) {
      y = 1;
    }
  }
  return items;
}


Output:
{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "foo",
        "typeAnnotation": null,
        "loc": null,
        "range": {
          "start": 9,
          "end": 12
        }
      },
      "params": [
        {
          "type": "Identifier",
          "name": "cond",
          "typeAnnotation": null,
          "loc": null,
          "range": {
            "start": 13,
            "end": 17
          }
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "let",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "items",
                  "typeAnnotation": null,
                  "loc": null,
                  "range": {
                    "start": 27,
                    "end": 32
                  }
                },
                "init": {
                  "type": "ArrayExpression",
                  "elements": [],
                  "loc": null,
                  "range": {
                    "start": 35,
                    "end": 37
                  }
                },
                "loc": null,
                "range": {
                  "start": 27,
                  "end": 37
                }
              }
            ],
            "loc": null,
            "range": {
              "start": 23,
              "end": 38
            }
          },
          {
            "type": "ForOfStatement",
            "await": false,
            "left": {
              "type": "VariableDeclaration",
              "kind": "const",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "item",
                    "typeAnnotation": null,
                    "loc": null,
                    "range": {
                      "start": 52,
                      "end": 56
                    }
                  },
                  "init": null,
                  "loc": null,
                  "range": {
                    "start": 52,
                    "end": 56
                  }
                }
              ],
              "loc": null,
              "range": {
                "start": 46,
                "end": 56
              }
            },
            "right": {
              "type": "Identifier",
              "name": "items",
              "typeAnnotation": null,
              "loc": null,
              "range": {
                "start": 60,
                "end": 65
              }
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "kind": "let",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "y",
                        "typeAnnotation": null,
                        "loc": null,
                        "range": {
                          "start": 77,
                          "end": 78
                        }
                      },
                      "init": {
                        "type": "NumericLiteral",
                        "value": 0.0,
                        "loc": null,
                        "range": {
                          "start": 81,
                          "end": 82
                        }
                      },
                      "loc": null,
                      "range": {
                        "start": 77,
                        "end": 82
                      }
                    }
                  ],
                  "loc": null,
                  "range": {
                    "start": 73,
                    "end": 83
                  }
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "Identifier",
                    "name": "cond",
                    "typeAnnotation": null,
                    "loc": null,
                    "range": {
                      "start": 92,
                      "end": 96
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "y",
                            "typeAnnotation": null,
                            "loc": null,
                            "range": {
                              "start": 106,
                              "end": 107
                            }
                          },
                          "right": {
                            "type": "NumericLiteral",
                            "value": 1.0,
                            "loc": null,
                            "range": {
                              "start": 110,
                              "end": 111
                            }
                          },
                          "loc": null,
                          "range": {
                            "start": 106,
                            "end": 111
                          }
                        },
                        "directive": null,
                        "loc": null,
                        "range": {
                          "start": 106,
                          "end": 112
                        }
                      }
                    ],
                    "loc": null,
                    "range": {
                      "start": 98,
                      "end": 118
                    }
                  },
                  "alternate": null,
                  "loc": null,
                  "range": {
                    "start": 88,
                    "end": 118
                  }
                }
              ],
              "loc": null,
              "range": {
                "start": 67,
                "end": 122
              }
            },
            "loc": null,
            "range": {
              "start": 41,
              "end": 122
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Identifier",
              "name": "items",
              "typeAnnotation": null,
              "loc": null,
              "range": {
                "start": 132,
                "end": 137
              }
            },
            "loc": null,
            "range": {
              "start": 125,
              "end": 138
            }
          }
        ],
        "loc": null,
        "range": {
          "start": 19,
          "end": 140
        }
      },
      "generator": false,
      "async": false,
      "loc": null,
      "range": {
        "start": 0,
        "end": 140
      },
      "loc": null,
      "range": {
        "start": 0,
        "end": 140
      }
    }
  ],
  "sourceType": "script",
  "loc": null,
  "range": {
    "start": 0,
    "end": 140
  }
}
