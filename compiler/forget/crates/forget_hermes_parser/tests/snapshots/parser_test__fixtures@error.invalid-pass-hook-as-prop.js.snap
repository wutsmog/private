---
source: crates/forget_hermes_parser/tests/parser_test.rs
expression: "format!(\"Input:\\n{input}\\n\\nOutput:\\n{output}\")"
input_file: crates/forget_hermes_parser/tests/fixtures/error.invalid-pass-hook-as-prop.js
---
Input:
function Component(props) {
  return <Child foo={useFoo} />;
}


Output:
{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "Component",
        "typeAnnotation": null,
        "loc": null,
        "range": {
          "start": 9,
          "end": 18
        }
      },
      "params": [
        {
          "type": "Identifier",
          "name": "props",
          "typeAnnotation": null,
          "loc": null,
          "range": {
            "start": 19,
            "end": 24
          }
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "JSXElement",
              "openingElement": {
                "type": "JSXOpeningElement",
                "name": {
                  "type": "JSXIdentifier",
                  "name": "Child",
                  "loc": null,
                  "range": {
                    "start": 38,
                    "end": 43
                  }
                },
                "attributes": [
                  {
                    "type": "JSXAttribute",
                    "name": {
                      "type": "JSXIdentifier",
                      "name": "foo",
                      "loc": null,
                      "range": {
                        "start": 44,
                        "end": 47
                      }
                    },
                    "value": {
                      "type": "JSXExpressionContainer",
                      "expression": {
                        "type": "Identifier",
                        "name": "useFoo",
                        "typeAnnotation": null,
                        "loc": null,
                        "range": {
                          "start": 49,
                          "end": 55
                        }
                      },
                      "loc": null,
                      "range": {
                        "start": 48,
                        "end": 56
                      }
                    },
                    "loc": null,
                    "range": {
                      "start": 44,
                      "end": 56
                    }
                  }
                ],
                "selfClosing": true,
                "loc": null,
                "range": {
                  "start": 37,
                  "end": 59
                }
              },
              "children": [],
              "closingElement": null,
              "loc": null,
              "range": {
                "start": 37,
                "end": 59
              }
            },
            "loc": null,
            "range": {
              "start": 30,
              "end": 60
            }
          }
        ],
        "loc": null,
        "range": {
          "start": 26,
          "end": 62
        }
      },
      "generator": false,
      "async": false,
      "loc": null,
      "range": {
        "start": 0,
        "end": 62
      },
      "loc": null,
      "range": {
        "start": 0,
        "end": 62
      }
    }
  ],
  "sourceType": "script",
  "loc": null,
  "range": {
    "start": 0,
    "end": 62
  }
}
