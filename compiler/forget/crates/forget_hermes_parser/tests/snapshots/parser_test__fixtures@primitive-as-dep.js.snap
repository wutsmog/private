---
source: crates/forget_hermes_parser/tests/parser_test.rs
expression: "format!(\"Input:\\n{input}\\n\\nOutput:\\n{output}\")"
input_file: crates/forget_hermes_parser/tests/fixtures/primitive-as-dep.js
---
Input:
// props.b + 1 is an non-allocating expression, which means Forget can
// emit it trivially and repeatedly (e.g. no need to memoize props.b + 1
// separately from props.b)
// Correctness:
//   y depends on either props.b or props.b + 1
function PrimitiveAsDep(props) {
  let y = foo(props.b + 1);
  return y;
}


Output:
{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "PrimitiveAsDep",
        "typeAnnotation": null,
        "loc": null,
        "range": {
          "start": 245,
          "end": 259
        }
      },
      "params": [
        {
          "type": "Identifier",
          "name": "props",
          "typeAnnotation": null,
          "loc": null,
          "range": {
            "start": 260,
            "end": 265
          }
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "let",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "y",
                  "typeAnnotation": null,
                  "loc": null,
                  "range": {
                    "start": 275,
                    "end": 276
                  }
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "foo",
                    "typeAnnotation": null,
                    "loc": null,
                    "range": {
                      "start": 279,
                      "end": 282
                    }
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "props",
                          "typeAnnotation": null,
                          "loc": null,
                          "range": {
                            "start": 283,
                            "end": 288
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "b",
                          "typeAnnotation": null,
                          "loc": null,
                          "range": {
                            "start": 289,
                            "end": 290
                          }
                        },
                        "computed": false,
                        "loc": null,
                        "range": {
                          "start": 283,
                          "end": 290
                        }
                      },
                      "operator": "+",
                      "right": {
                        "type": "NumericLiteral",
                        "value": 1.0,
                        "loc": null,
                        "range": {
                          "start": 293,
                          "end": 294
                        }
                      },
                      "loc": null,
                      "range": {
                        "start": 283,
                        "end": 294
                      }
                    }
                  ],
                  "loc": null,
                  "range": {
                    "start": 279,
                    "end": 295
                  }
                },
                "loc": null,
                "range": {
                  "start": 275,
                  "end": 295
                }
              }
            ],
            "loc": null,
            "range": {
              "start": 271,
              "end": 296
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Identifier",
              "name": "y",
              "typeAnnotation": null,
              "loc": null,
              "range": {
                "start": 306,
                "end": 307
              }
            },
            "loc": null,
            "range": {
              "start": 299,
              "end": 308
            }
          }
        ],
        "loc": null,
        "range": {
          "start": 267,
          "end": 310
        }
      },
      "generator": false,
      "async": false,
      "loc": null,
      "range": {
        "start": 236,
        "end": 310
      },
      "loc": null,
      "range": {
        "start": 236,
        "end": 310
      }
    }
  ],
  "sourceType": "script",
  "loc": null,
  "range": {
    "start": 236,
    "end": 310
  }
}
