---
source: crates/forget_hermes_parser/tests/parser_test.rs
expression: "format!(\"Input:\\n{input}\\n\\nOutput:\\n{output}\")"
input_file: crates/forget_hermes_parser/tests/fixtures/useMemo-labeled-statement-unconditional-return.js
---
Input:
function Component(props) {
  const x = useMemo(() => {
    label: {
      return props.value;
    }
  });
  return x;
}


Output:
{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "Component",
        "typeAnnotation": null,
        "loc": null,
        "range": {
          "start": 0,
          "end": 1
        }
      },
      "params": [
        {
          "type": "Identifier",
          "name": "props",
          "typeAnnotation": null,
          "loc": null,
          "range": {
            "start": 0,
            "end": 1
          }
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "const",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "x",
                  "typeAnnotation": null,
                  "loc": null,
                  "range": {
                    "start": 0,
                    "end": 1
                  }
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "useMemo",
                    "typeAnnotation": null,
                    "loc": null,
                    "range": {
                      "start": 0,
                      "end": 1
                    }
                  },
                  "arguments": [
                    {
                      "type": "ArrowFunctionExpression",
                      "id": null,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "LabeledStatement",
                            "label": {
                              "type": "Identifier",
                              "name": "label",
                              "typeAnnotation": null,
                              "loc": null,
                              "range": {
                                "start": 0,
                                "end": 1
                              }
                            },
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "MemberExpression",
                                    "object": {
                                      "type": "Identifier",
                                      "name": "props",
                                      "typeAnnotation": null,
                                      "loc": null,
                                      "range": {
                                        "start": 0,
                                        "end": 1
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "value",
                                      "typeAnnotation": null,
                                      "loc": null,
                                      "range": {
                                        "start": 0,
                                        "end": 1
                                      }
                                    },
                                    "computed": false,
                                    "loc": null,
                                    "range": {
                                      "start": 0,
                                      "end": 1
                                    }
                                  },
                                  "loc": null,
                                  "range": {
                                    "start": 0,
                                    "end": 1
                                  }
                                }
                              ],
                              "loc": null,
                              "range": {
                                "start": 0,
                                "end": 1
                              }
                            },
                            "loc": null,
                            "range": {
                              "start": 0,
                              "end": 1
                            }
                          }
                        ],
                        "loc": null,
                        "range": {
                          "start": 0,
                          "end": 1
                        }
                      },
                      "generator": false,
                      "async": false,
                      "loc": null,
                      "range": {
                        "start": 0,
                        "end": 1
                      },
                      "expression": false,
                      "loc": null,
                      "range": {
                        "start": 0,
                        "end": 1
                      }
                    }
                  ],
                  "loc": null,
                  "range": {
                    "start": 0,
                    "end": 1
                  }
                },
                "loc": null,
                "range": {
                  "start": 0,
                  "end": 1
                }
              }
            ],
            "loc": null,
            "range": {
              "start": 0,
              "end": 1
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Identifier",
              "name": "x",
              "typeAnnotation": null,
              "loc": null,
              "range": {
                "start": 0,
                "end": 1
              }
            },
            "loc": null,
            "range": {
              "start": 0,
              "end": 1
            }
          }
        ],
        "loc": null,
        "range": {
          "start": 0,
          "end": 1
        }
      },
      "generator": false,
      "async": false,
      "loc": null,
      "range": {
        "start": 0,
        "end": 1
      },
      "loc": null,
      "range": {
        "start": 0,
        "end": 1
      }
    }
  ],
  "sourceType": "script",
  "loc": null,
  "range": {
    "start": 0,
    "end": 1
  }
}
