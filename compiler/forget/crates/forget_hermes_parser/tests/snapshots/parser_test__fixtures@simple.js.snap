---
source: crates/forget_hermes_parser/tests/parser_test.rs
expression: "format!(\"Input:\\n{input}\\n\\nOutput:\\n{output}\")"
input_file: crates/forget_hermes_parser/tests/fixtures/simple.js
---
Input:
export default function foo(x, y) {
  if (x) {
    return foo(false, y);
  }
  return [y * 10];
}


Output:
{
  "type": "Program",
  "body": [
    {
      "type": "ExportDefaultDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "foo",
          "typeAnnotation": null,
          "loc": null,
          "range": {
            "start": 24,
            "end": 27
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "x",
            "typeAnnotation": null,
            "loc": null,
            "range": {
              "start": 28,
              "end": 29
            }
          },
          {
            "type": "Identifier",
            "name": "y",
            "typeAnnotation": null,
            "loc": null,
            "range": {
              "start": 31,
              "end": 32
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "Identifier",
                "name": "x",
                "typeAnnotation": null,
                "loc": null,
                "range": {
                  "start": 42,
                  "end": 43
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "foo",
                        "typeAnnotation": null,
                        "loc": null,
                        "range": {
                          "start": 58,
                          "end": 61
                        }
                      },
                      "arguments": [
                        {
                          "type": "BooleanLiteral",
                          "value": false,
                          "loc": null,
                          "range": {
                            "start": 62,
                            "end": 67
                          }
                        },
                        {
                          "type": "Identifier",
                          "name": "y",
                          "typeAnnotation": null,
                          "loc": null,
                          "range": {
                            "start": 69,
                            "end": 70
                          }
                        }
                      ],
                      "loc": null,
                      "range": {
                        "start": 58,
                        "end": 71
                      }
                    },
                    "loc": null,
                    "range": {
                      "start": 51,
                      "end": 72
                    }
                  }
                ],
                "loc": null,
                "range": {
                  "start": 45,
                  "end": 76
                }
              },
              "alternate": null,
              "loc": null,
              "range": {
                "start": 38,
                "end": 76
              }
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "y",
                      "typeAnnotation": null,
                      "loc": null,
                      "range": {
                        "start": 87,
                        "end": 88
                      }
                    },
                    "operator": "*",
                    "right": {
                      "type": "NumericLiteral",
                      "value": 10.0,
                      "loc": null,
                      "range": {
                        "start": 91,
                        "end": 93
                      }
                    },
                    "loc": null,
                    "range": {
                      "start": 87,
                      "end": 93
                    }
                  }
                ],
                "loc": null,
                "range": {
                  "start": 86,
                  "end": 94
                }
              },
              "loc": null,
              "range": {
                "start": 79,
                "end": 95
              }
            }
          ],
          "loc": null,
          "range": {
            "start": 34,
            "end": 97
          }
        },
        "generator": false,
        "async": false,
        "loc": null,
        "range": {
          "start": 15,
          "end": 97
        },
        "loc": null,
        "range": {
          "start": 15,
          "end": 97
        }
      },
      "loc": null,
      "range": {
        "start": 0,
        "end": 97
      }
    }
  ],
  "sourceType": "script",
  "loc": null,
  "range": {
    "start": 0,
    "end": 97
  }
}
