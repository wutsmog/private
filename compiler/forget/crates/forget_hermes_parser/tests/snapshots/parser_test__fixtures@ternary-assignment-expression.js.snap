---
source: crates/forget_hermes_parser/tests/parser_test.rs
expression: "format!(\"Input:\\n{input}\\n\\nOutput:\\n{output}\")"
input_file: crates/forget_hermes_parser/tests/fixtures/ternary-assignment-expression.js
---
Input:
function ternary(props) {
  let x = 0;
  const y = props.a ? (x = 1) : (x = 2);
  return x + y;
}


Output:
{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "ternary",
        "typeAnnotation": null,
        "loc": null,
        "range": {
          "start": 9,
          "end": 16
        }
      },
      "params": [
        {
          "type": "Identifier",
          "name": "props",
          "typeAnnotation": null,
          "loc": null,
          "range": {
            "start": 17,
            "end": 22
          }
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "let",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "x",
                  "typeAnnotation": null,
                  "loc": null,
                  "range": {
                    "start": 32,
                    "end": 33
                  }
                },
                "init": {
                  "type": "NumericLiteral",
                  "value": 0.0,
                  "loc": null,
                  "range": {
                    "start": 36,
                    "end": 37
                  }
                },
                "loc": null,
                "range": {
                  "start": 32,
                  "end": 37
                }
              }
            ],
            "loc": null,
            "range": {
              "start": 28,
              "end": 38
            }
          },
          {
            "type": "VariableDeclaration",
            "kind": "const",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "y",
                  "typeAnnotation": null,
                  "loc": null,
                  "range": {
                    "start": 47,
                    "end": 48
                  }
                },
                "init": {
                  "type": "ConditionalExpression",
                  "test": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "props",
                      "typeAnnotation": null,
                      "loc": null,
                      "range": {
                        "start": 51,
                        "end": 56
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "a",
                      "typeAnnotation": null,
                      "loc": null,
                      "range": {
                        "start": 57,
                        "end": 58
                      }
                    },
                    "computed": false,
                    "loc": null,
                    "range": {
                      "start": 51,
                      "end": 58
                    }
                  },
                  "alternate": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "x",
                      "typeAnnotation": null,
                      "loc": null,
                      "range": {
                        "start": 72,
                        "end": 73
                      }
                    },
                    "right": {
                      "type": "NumericLiteral",
                      "value": 2.0,
                      "loc": null,
                      "range": {
                        "start": 76,
                        "end": 77
                      }
                    },
                    "loc": null,
                    "range": {
                      "start": 72,
                      "end": 77
                    }
                  },
                  "consequent": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "x",
                      "typeAnnotation": null,
                      "loc": null,
                      "range": {
                        "start": 62,
                        "end": 63
                      }
                    },
                    "right": {
                      "type": "NumericLiteral",
                      "value": 1.0,
                      "loc": null,
                      "range": {
                        "start": 66,
                        "end": 67
                      }
                    },
                    "loc": null,
                    "range": {
                      "start": 62,
                      "end": 67
                    }
                  },
                  "loc": null,
                  "range": {
                    "start": 51,
                    "end": 78
                  }
                },
                "loc": null,
                "range": {
                  "start": 47,
                  "end": 78
                }
              }
            ],
            "loc": null,
            "range": {
              "start": 41,
              "end": 79
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "x",
                "typeAnnotation": null,
                "loc": null,
                "range": {
                  "start": 89,
                  "end": 90
                }
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "name": "y",
                "typeAnnotation": null,
                "loc": null,
                "range": {
                  "start": 93,
                  "end": 94
                }
              },
              "loc": null,
              "range": {
                "start": 89,
                "end": 94
              }
            },
            "loc": null,
            "range": {
              "start": 82,
              "end": 95
            }
          }
        ],
        "loc": null,
        "range": {
          "start": 24,
          "end": 97
        }
      },
      "generator": false,
      "async": false,
      "loc": null,
      "range": {
        "start": 0,
        "end": 97
      },
      "loc": null,
      "range": {
        "start": 0,
        "end": 97
      }
    }
  ],
  "sourceType": "script",
  "loc": null,
  "range": {
    "start": 0,
    "end": 97
  }
}
