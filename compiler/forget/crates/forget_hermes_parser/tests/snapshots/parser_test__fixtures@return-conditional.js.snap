---
source: crates/forget_hermes_parser/tests/parser_test.rs
expression: "format!(\"Input:\\n{input}\\n\\nOutput:\\n{output}\")"
input_file: crates/forget_hermes_parser/tests/fixtures/return-conditional.js
---
Input:
function foo(a, b) {
  if (a == null) {
    return null;
  } else {
    return b;
  }
}


Output:
{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "foo",
        "typeAnnotation": null,
        "loc": null,
        "range": {
          "start": 9,
          "end": 12
        }
      },
      "params": [
        {
          "type": "Identifier",
          "name": "a",
          "typeAnnotation": null,
          "loc": null,
          "range": {
            "start": 13,
            "end": 14
          }
        },
        {
          "type": "Identifier",
          "name": "b",
          "typeAnnotation": null,
          "loc": null,
          "range": {
            "start": 16,
            "end": 17
          }
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "a",
                "typeAnnotation": null,
                "loc": null,
                "range": {
                  "start": 27,
                  "end": 28
                }
              },
              "operator": "==",
              "right": {
                "type": "NullLiteral",
                "loc": null,
                "range": {
                  "start": 32,
                  "end": 36
                }
              },
              "loc": null,
              "range": {
                "start": 27,
                "end": 36
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "NullLiteral",
                    "loc": null,
                    "range": {
                      "start": 51,
                      "end": 55
                    }
                  },
                  "loc": null,
                  "range": {
                    "start": 44,
                    "end": 56
                  }
                }
              ],
              "loc": null,
              "range": {
                "start": 38,
                "end": 60
              }
            },
            "alternate": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Identifier",
                    "name": "b",
                    "typeAnnotation": null,
                    "loc": null,
                    "range": {
                      "start": 79,
                      "end": 80
                    }
                  },
                  "loc": null,
                  "range": {
                    "start": 72,
                    "end": 81
                  }
                }
              ],
              "loc": null,
              "range": {
                "start": 66,
                "end": 85
              }
            },
            "loc": null,
            "range": {
              "start": 23,
              "end": 85
            }
          }
        ],
        "loc": null,
        "range": {
          "start": 19,
          "end": 87
        }
      },
      "generator": false,
      "async": false,
      "loc": null,
      "range": {
        "start": 0,
        "end": 87
      },
      "loc": null,
      "range": {
        "start": 0,
        "end": 87
      }
    }
  ],
  "sourceType": "script",
  "loc": null,
  "range": {
    "start": 0,
    "end": 87
  }
}
