---
source: crates/forget_hermes_parser/tests/parser_test.rs
expression: "format!(\"Input:\\n{input}\\n\\nOutput:\\n{output}\")"
input_file: crates/forget_hermes_parser/tests/fixtures/conditional-set-state-in-render.js
---
Input:
function Component(props) {
  const [x, setX] = useState(0);

  const foo = () => {
    setX(1);
  };

  if (props.cond) {
    setX(2);
    foo();
  }

  return x;
}


Output:
{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "Component",
        "typeAnnotation": null,
        "loc": null,
        "range": {
          "start": 9,
          "end": 18
        }
      },
      "params": [
        {
          "type": "Identifier",
          "name": "props",
          "typeAnnotation": null,
          "loc": null,
          "range": {
            "start": 19,
            "end": 24
          }
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "const",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "ArrayPattern",
                  "elements": [
                    {
                      "type": "Identifier",
                      "name": "x",
                      "typeAnnotation": null,
                      "loc": null,
                      "range": {
                        "start": 37,
                        "end": 38
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "setX",
                      "typeAnnotation": null,
                      "loc": null,
                      "range": {
                        "start": 40,
                        "end": 44
                      }
                    }
                  ],
                  "loc": null,
                  "range": {
                    "start": 36,
                    "end": 45
                  }
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "useState",
                    "typeAnnotation": null,
                    "loc": null,
                    "range": {
                      "start": 48,
                      "end": 56
                    }
                  },
                  "arguments": [
                    {
                      "type": "NumericLiteral",
                      "value": 0.0,
                      "loc": null,
                      "range": {
                        "start": 57,
                        "end": 58
                      }
                    }
                  ],
                  "loc": null,
                  "range": {
                    "start": 48,
                    "end": 59
                  }
                },
                "loc": null,
                "range": {
                  "start": 36,
                  "end": 59
                }
              }
            ],
            "loc": null,
            "range": {
              "start": 30,
              "end": 60
            }
          },
          {
            "type": "VariableDeclaration",
            "kind": "const",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "foo",
                  "typeAnnotation": null,
                  "loc": null,
                  "range": {
                    "start": 70,
                    "end": 73
                  }
                },
                "init": {
                  "type": "ArrowFunctionExpression",
                  "id": null,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "setX",
                            "typeAnnotation": null,
                            "loc": null,
                            "range": {
                              "start": 88,
                              "end": 92
                            }
                          },
                          "arguments": [
                            {
                              "type": "NumericLiteral",
                              "value": 1.0,
                              "loc": null,
                              "range": {
                                "start": 93,
                                "end": 94
                              }
                            }
                          ],
                          "loc": null,
                          "range": {
                            "start": 88,
                            "end": 95
                          }
                        },
                        "directive": null,
                        "loc": null,
                        "range": {
                          "start": 88,
                          "end": 96
                        }
                      }
                    ],
                    "loc": null,
                    "range": {
                      "start": 82,
                      "end": 100
                    }
                  },
                  "generator": false,
                  "async": false,
                  "loc": null,
                  "range": {
                    "start": 76,
                    "end": 100
                  },
                  "expression": false,
                  "loc": null,
                  "range": {
                    "start": 76,
                    "end": 100
                  }
                },
                "loc": null,
                "range": {
                  "start": 70,
                  "end": 100
                }
              }
            ],
            "loc": null,
            "range": {
              "start": 64,
              "end": 101
            }
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "props",
                "typeAnnotation": null,
                "loc": null,
                "range": {
                  "start": 109,
                  "end": 114
                }
              },
              "property": {
                "type": "Identifier",
                "name": "cond",
                "typeAnnotation": null,
                "loc": null,
                "range": {
                  "start": 115,
                  "end": 119
                }
              },
              "computed": false,
              "loc": null,
              "range": {
                "start": 109,
                "end": 119
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "setX",
                      "typeAnnotation": null,
                      "loc": null,
                      "range": {
                        "start": 127,
                        "end": 131
                      }
                    },
                    "arguments": [
                      {
                        "type": "NumericLiteral",
                        "value": 2.0,
                        "loc": null,
                        "range": {
                          "start": 132,
                          "end": 133
                        }
                      }
                    ],
                    "loc": null,
                    "range": {
                      "start": 127,
                      "end": 134
                    }
                  },
                  "directive": null,
                  "loc": null,
                  "range": {
                    "start": 127,
                    "end": 135
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "foo",
                      "typeAnnotation": null,
                      "loc": null,
                      "range": {
                        "start": 140,
                        "end": 143
                      }
                    },
                    "arguments": [],
                    "loc": null,
                    "range": {
                      "start": 140,
                      "end": 145
                    }
                  },
                  "directive": null,
                  "loc": null,
                  "range": {
                    "start": 140,
                    "end": 146
                  }
                }
              ],
              "loc": null,
              "range": {
                "start": 121,
                "end": 150
              }
            },
            "alternate": null,
            "loc": null,
            "range": {
              "start": 105,
              "end": 150
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Identifier",
              "name": "x",
              "typeAnnotation": null,
              "loc": null,
              "range": {
                "start": 161,
                "end": 162
              }
            },
            "loc": null,
            "range": {
              "start": 154,
              "end": 163
            }
          }
        ],
        "loc": null,
        "range": {
          "start": 26,
          "end": 165
        }
      },
      "generator": false,
      "async": false,
      "loc": null,
      "range": {
        "start": 0,
        "end": 165
      },
      "loc": null,
      "range": {
        "start": 0,
        "end": 165
      }
    }
  ],
  "sourceType": "script",
  "loc": null,
  "range": {
    "start": 0,
    "end": 165
  }
}
