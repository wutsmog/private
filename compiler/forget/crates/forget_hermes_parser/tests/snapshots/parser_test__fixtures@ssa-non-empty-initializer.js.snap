---
source: crates/forget_hermes_parser/tests/parser_test.rs
expression: "format!(\"Input:\\n{input}\\n\\nOutput:\\n{output}\")"
input_file: crates/forget_hermes_parser/tests/fixtures/ssa-non-empty-initializer.js
---
Input:
function foo(a, b) {
  let x = [];
  if (a) {
    x = 1;
  }

  let y = x;
  return y;
}


Output:
{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "foo",
        "typeAnnotation": null,
        "loc": null,
        "range": {
          "start": 9,
          "end": 12
        }
      },
      "params": [
        {
          "type": "Identifier",
          "name": "a",
          "typeAnnotation": null,
          "loc": null,
          "range": {
            "start": 13,
            "end": 14
          }
        },
        {
          "type": "Identifier",
          "name": "b",
          "typeAnnotation": null,
          "loc": null,
          "range": {
            "start": 16,
            "end": 17
          }
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "let",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "x",
                  "typeAnnotation": null,
                  "loc": null,
                  "range": {
                    "start": 27,
                    "end": 28
                  }
                },
                "init": {
                  "type": "ArrayExpression",
                  "elements": [],
                  "loc": null,
                  "range": {
                    "start": 31,
                    "end": 33
                  }
                },
                "loc": null,
                "range": {
                  "start": 27,
                  "end": 33
                }
              }
            ],
            "loc": null,
            "range": {
              "start": 23,
              "end": 34
            }
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "Identifier",
              "name": "a",
              "typeAnnotation": null,
              "loc": null,
              "range": {
                "start": 41,
                "end": 42
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "x",
                      "typeAnnotation": null,
                      "loc": null,
                      "range": {
                        "start": 50,
                        "end": 51
                      }
                    },
                    "right": {
                      "type": "NumericLiteral",
                      "value": 1.0,
                      "loc": null,
                      "range": {
                        "start": 54,
                        "end": 55
                      }
                    },
                    "loc": null,
                    "range": {
                      "start": 50,
                      "end": 55
                    }
                  },
                  "directive": null,
                  "loc": null,
                  "range": {
                    "start": 50,
                    "end": 56
                  }
                }
              ],
              "loc": null,
              "range": {
                "start": 44,
                "end": 60
              }
            },
            "alternate": null,
            "loc": null,
            "range": {
              "start": 37,
              "end": 60
            }
          },
          {
            "type": "VariableDeclaration",
            "kind": "let",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "y",
                  "typeAnnotation": null,
                  "loc": null,
                  "range": {
                    "start": 68,
                    "end": 69
                  }
                },
                "init": {
                  "type": "Identifier",
                  "name": "x",
                  "typeAnnotation": null,
                  "loc": null,
                  "range": {
                    "start": 72,
                    "end": 73
                  }
                },
                "loc": null,
                "range": {
                  "start": 68,
                  "end": 73
                }
              }
            ],
            "loc": null,
            "range": {
              "start": 64,
              "end": 74
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Identifier",
              "name": "y",
              "typeAnnotation": null,
              "loc": null,
              "range": {
                "start": 84,
                "end": 85
              }
            },
            "loc": null,
            "range": {
              "start": 77,
              "end": 86
            }
          }
        ],
        "loc": null,
        "range": {
          "start": 19,
          "end": 88
        }
      },
      "generator": false,
      "async": false,
      "loc": null,
      "range": {
        "start": 0,
        "end": 88
      },
      "loc": null,
      "range": {
        "start": 0,
        "end": 88
      }
    }
  ],
  "sourceType": "script",
  "loc": null,
  "range": {
    "start": 0,
    "end": 88
  }
}
