---
source: crates/forget_hermes_parser/tests/parser_test.rs
expression: "format!(\"Input:\\n{input}\\n\\nOutput:\\n{output}\")"
input_file: crates/forget_hermes_parser/tests/fixtures/error.mutate-global-increment-op-invalid-react.js
---
Input:
let renderCount = 0;

function NoHooks() {
  renderCount++;
  return <div />;
}


Output:
{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "renderCount",
            "typeAnnotation": null,
            "loc": null,
            "range": {
              "start": 4,
              "end": 15
            }
          },
          "init": {
            "type": "NumericLiteral",
            "value": 0.0,
            "loc": null,
            "range": {
              "start": 18,
              "end": 19
            }
          },
          "loc": null,
          "range": {
            "start": 4,
            "end": 19
          }
        }
      ],
      "loc": null,
      "range": {
        "start": 0,
        "end": 20
      }
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "NoHooks",
        "typeAnnotation": null,
        "loc": null,
        "range": {
          "start": 31,
          "end": 38
        }
      },
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "UpdateExpression",
              "operator": "++",
              "argument": {
                "type": "Identifier",
                "name": "renderCount",
                "typeAnnotation": null,
                "loc": null,
                "range": {
                  "start": 45,
                  "end": 56
                }
              },
              "prefix": false,
              "loc": null,
              "range": {
                "start": 45,
                "end": 58
              }
            },
            "directive": null,
            "loc": null,
            "range": {
              "start": 45,
              "end": 59
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "JSXElement",
              "openingElement": {
                "type": "JSXOpeningElement",
                "name": {
                  "type": "JSXIdentifier",
                  "name": "div",
                  "loc": null,
                  "range": {
                    "start": 70,
                    "end": 73
                  }
                },
                "attributes": [],
                "selfClosing": true,
                "loc": null,
                "range": {
                  "start": 69,
                  "end": 76
                }
              },
              "children": [],
              "closingElement": null,
              "loc": null,
              "range": {
                "start": 69,
                "end": 76
              }
            },
            "loc": null,
            "range": {
              "start": 62,
              "end": 77
            }
          }
        ],
        "loc": null,
        "range": {
          "start": 41,
          "end": 79
        }
      },
      "generator": false,
      "async": false,
      "loc": null,
      "range": {
        "start": 22,
        "end": 79
      },
      "loc": null,
      "range": {
        "start": 22,
        "end": 79
      }
    }
  ],
  "sourceType": "script",
  "loc": null,
  "range": {
    "start": 0,
    "end": 79
  }
}
