---
source: crates/forget_hermes_parser/tests/parser_test.rs
expression: "format!(\"Input:\\n{input}\\n\\nOutput:\\n{output}\")"
input_file: crates/forget_hermes_parser/tests/fixtures/assignment-in-nested-if.js
---
Input:
function useBar(props) {
  let z;

  if (props.a) {
    if (props.b) {
      z = baz();
    }
  }

  return z;
}


Output:
{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "useBar",
        "typeAnnotation": null,
        "loc": null,
        "range": {
          "start": 9,
          "end": 15
        }
      },
      "params": [
        {
          "type": "Identifier",
          "name": "props",
          "typeAnnotation": null,
          "loc": null,
          "range": {
            "start": 16,
            "end": 21
          }
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "let",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "z",
                  "typeAnnotation": null,
                  "loc": null,
                  "range": {
                    "start": 31,
                    "end": 32
                  }
                },
                "init": null,
                "loc": null,
                "range": {
                  "start": 31,
                  "end": 32
                }
              }
            ],
            "loc": null,
            "range": {
              "start": 27,
              "end": 33
            }
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "props",
                "typeAnnotation": null,
                "loc": null,
                "range": {
                  "start": 41,
                  "end": 46
                }
              },
              "property": {
                "type": "Identifier",
                "name": "a",
                "typeAnnotation": null,
                "loc": null,
                "range": {
                  "start": 47,
                  "end": 48
                }
              },
              "computed": false,
              "loc": null,
              "range": {
                "start": 41,
                "end": 48
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "props",
                      "typeAnnotation": null,
                      "loc": null,
                      "range": {
                        "start": 60,
                        "end": 65
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "b",
                      "typeAnnotation": null,
                      "loc": null,
                      "range": {
                        "start": 66,
                        "end": 67
                      }
                    },
                    "computed": false,
                    "loc": null,
                    "range": {
                      "start": 60,
                      "end": 67
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "z",
                            "typeAnnotation": null,
                            "loc": null,
                            "range": {
                              "start": 77,
                              "end": 78
                            }
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "baz",
                              "typeAnnotation": null,
                              "loc": null,
                              "range": {
                                "start": 81,
                                "end": 84
                              }
                            },
                            "arguments": [],
                            "loc": null,
                            "range": {
                              "start": 81,
                              "end": 86
                            }
                          },
                          "loc": null,
                          "range": {
                            "start": 77,
                            "end": 86
                          }
                        },
                        "directive": null,
                        "loc": null,
                        "range": {
                          "start": 77,
                          "end": 87
                        }
                      }
                    ],
                    "loc": null,
                    "range": {
                      "start": 69,
                      "end": 93
                    }
                  },
                  "alternate": null,
                  "loc": null,
                  "range": {
                    "start": 56,
                    "end": 93
                  }
                }
              ],
              "loc": null,
              "range": {
                "start": 50,
                "end": 97
              }
            },
            "alternate": null,
            "loc": null,
            "range": {
              "start": 37,
              "end": 97
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Identifier",
              "name": "z",
              "typeAnnotation": null,
              "loc": null,
              "range": {
                "start": 108,
                "end": 109
              }
            },
            "loc": null,
            "range": {
              "start": 101,
              "end": 110
            }
          }
        ],
        "loc": null,
        "range": {
          "start": 23,
          "end": 112
        }
      },
      "generator": false,
      "async": false,
      "loc": null,
      "range": {
        "start": 0,
        "end": 112
      },
      "loc": null,
      "range": {
        "start": 0,
        "end": 112
      }
    }
  ],
  "sourceType": "script",
  "loc": null,
  "range": {
    "start": 0,
    "end": 112
  }
}
