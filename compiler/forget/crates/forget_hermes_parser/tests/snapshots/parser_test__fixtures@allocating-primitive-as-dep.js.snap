---
source: crates/forget_hermes_parser/tests/parser_test.rs
expression: "format!(\"Input:\\n{input}\\n\\nOutput:\\n{output}\")"
input_file: crates/forget_hermes_parser/tests/fixtures/allocating-primitive-as-dep.js
---
Input:
// bar(props.b) is an allocating expression that produces a primitive, which means
// that Forget should memoize it.
// Correctness:
//   - y depends on either bar(props.b) or bar(props.b) + 1
function AllocatingPrimitiveAsDep(props) {
  let y = foo(bar(props).b + 1);
  return y;
}


Output:
{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "AllocatingPrimitiveAsDep",
        "typeAnnotation": null,
        "loc": null,
        "range": {
          "start": 202,
          "end": 226
        }
      },
      "params": [
        {
          "type": "Identifier",
          "name": "props",
          "typeAnnotation": null,
          "loc": null,
          "range": {
            "start": 227,
            "end": 232
          }
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "let",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "y",
                  "typeAnnotation": null,
                  "loc": null,
                  "range": {
                    "start": 242,
                    "end": 243
                  }
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "foo",
                    "typeAnnotation": null,
                    "loc": null,
                    "range": {
                      "start": 246,
                      "end": 249
                    }
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "bar",
                            "typeAnnotation": null,
                            "loc": null,
                            "range": {
                              "start": 250,
                              "end": 253
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "props",
                              "typeAnnotation": null,
                              "loc": null,
                              "range": {
                                "start": 254,
                                "end": 259
                              }
                            }
                          ],
                          "loc": null,
                          "range": {
                            "start": 250,
                            "end": 260
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "b",
                          "typeAnnotation": null,
                          "loc": null,
                          "range": {
                            "start": 261,
                            "end": 262
                          }
                        },
                        "computed": false,
                        "loc": null,
                        "range": {
                          "start": 250,
                          "end": 262
                        }
                      },
                      "operator": "+",
                      "right": {
                        "type": "NumericLiteral",
                        "value": 1.0,
                        "loc": null,
                        "range": {
                          "start": 265,
                          "end": 266
                        }
                      },
                      "loc": null,
                      "range": {
                        "start": 250,
                        "end": 266
                      }
                    }
                  ],
                  "loc": null,
                  "range": {
                    "start": 246,
                    "end": 267
                  }
                },
                "loc": null,
                "range": {
                  "start": 242,
                  "end": 267
                }
              }
            ],
            "loc": null,
            "range": {
              "start": 238,
              "end": 268
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Identifier",
              "name": "y",
              "typeAnnotation": null,
              "loc": null,
              "range": {
                "start": 278,
                "end": 279
              }
            },
            "loc": null,
            "range": {
              "start": 271,
              "end": 280
            }
          }
        ],
        "loc": null,
        "range": {
          "start": 234,
          "end": 282
        }
      },
      "generator": false,
      "async": false,
      "loc": null,
      "range": {
        "start": 193,
        "end": 282
      },
      "loc": null,
      "range": {
        "start": 193,
        "end": 282
      }
    }
  ],
  "sourceType": "script",
  "loc": null,
  "range": {
    "start": 193,
    "end": 282
  }
}
